{"version":3,"sources":["icons/defaultIcon.svg","icons/backArrowActive.svg","icons/heart-white.svg","icons/forwardArrow.svg","icons/backArrow.svg","auth/hash.js","components/Header.js","auth/config.js","components/Login.js","components/Loading.js","components/MusicTypeSelector.js","components/Card.js","components/user-library/LikedSongsCard.js","helpers/fetchGet.js","hooks/GlobalContext.js","components/user-library/Playlists.js","components/user-library/Albums.js","components/search-components/BrowseBar.js","components/search-components/SearchResults.js","components/search-components/Search.js","components/nav-components/NavButton.js","components/nav-components/PlaylistPage.js","helpers/decodeHTML.js","components/nav-components/ArtistPage.js","components/nav-components/AlbumPage.js","components/search-components/BrowsePage.js","components/user-library/LikedSongsPage.js","Home.js","App.js","index.js"],"names":["module","exports","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Header","props","userData","className","src","images","url","defaultIcon","alt","style","maxHeight","width","objectFit","borderRadius","scopes","ModalHeader","styled","div","Body","CenteredDiv","ModalBody","Login","Button","href","join","backgroundColor","Loading","NLink","NavLink","MusicTypeSelector","musicTypeHeader","useRef","useState","stick","setStick","breakpoint","handleScroll","this","scrollY","current","useEffect","addEventListener","offsetTop","removeEventListener","height","clientHeight","ref","to","activeClassName","Card","img","header","subheader","endpoint","path","type","hero","name","artists","map","artist","owner","display_name","album","history","useHistory","id","onClick","push","loading","LikedSongsCard","margin","likedSongsIcon","fetchGet","fetchURL","token","a","fetch","method","mode","headers","response","ok","status","json","console","log","document","reload","GlobalContext","React","createContext","GlobalContextProvider","context","setContext","Provider","value","children","Playlists","useContext","playlists","setPlaylists","nextPlaylistUrl","setNextPlaylistUrl","handleLoadMore","body","prevPlaylists","items","next","initHandleLoadMore","useCallback","length","pageStart","loadMore","hasMore","Boolean","loader","key","playlist","Albums","albums","setAlbums","nextAlbumUrl","setNextAlbumUrl","prevAlbums","newAlbums","BrowseBar","forward","back","data","goBack","backArrow","undefined","maxWidth","forwardArrow","SearchResults","query","setData","formattedQuery","filter","character","albumsUrl","artistsUrl","playlistsUrl","tracks","tracksUrl","SearchInput","input","Search","state","setQuery","placeholder","autoFocus","onChange","event","target","role","viewBox","color","aria-hidden","d","fill","button","backArrowActive","NavButtons","PlaylistTop","PlaylistBottom","PlaylistPage","nextTrackUrl","setNextTrackUrl","setTracks","prevTracks","primary_color","NavButton","defaultImage","description","html","txt","createElement","innerHTML","decodeHTML","index","track","ArtistPage","AlbumPage","BrowsePage","newType","toUpperCase","capsType","setNext","prevData","threshold","LikedSongs","Home","error","setToken","setUserData","authFailed","setAuthFailed","access_token","localStorage","clear","setItem","prevContext","getItem","_token","Authorization","spotifyConnect","initialEntries","pathname","initialIndex","LikedSongsPage","App","setTimeout","scrollTo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2126f5c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultIcon.cd9692eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/backArrowActive.64b50238.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-white.b3d0b957.svg\";","module.exports = __webpack_public_path__ + \"static/media/forwardArrow.5ca0dc2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/backArrow.5f26c12e.svg\";","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;","import React from 'react';\nimport defaultIcon from \"../icons/defaultIcon.svg\"\n\nconst Header = (props) => {\n    const {userData} = props\n    \n\n\n    return (\n        <div className=\"mb-2 text-center text-lg sm:text-xl md:text-2xl font-fredoka pt-2 pl-2 pr-2 pb-0 flex justify-between tracking-wide text-white cursor-default\">\n                <span className=\"flex justify-center self-center\">\n                {/* <img src={require(\"../icons/runnerman.svg\")} alt=\"running / music logo\" className=\"inline mr-1 self-center\" style={{verticalAlign: 'middle', height: \"1.2em\"}}/> */}\n                BPM Playlist Maker\n                </span>\n                {/* pulls in the profile picture and the css just, uhhh, makes it circular and stuff */}\n                \n                <img src={userData.images[0] ? userData.images[0].url : defaultIcon} alt=\"profile\" className=\"self-center mr-2\" style={{maxHeight: \"1.2em\", width: \"1.2em\", objectFit: \"cover\", borderRadius: \"50%\"}}/> \n        </div>\n    )\n}\n\n\nexport default Header","\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"4451d90a4f634c33b6f4e015d616ab44\";\nexport const redirectUri = \"https://brentably.github.io/SpotifyPlaylistMaker\";\n// export const redirectUri = \"http://192.168.0.246:3000/\";\nexport const scopes = [\n    \"ugc-image-upload\",\n    \"user-top-read\",\n    \"user-read-playback-position\",\n    \"user-read-recently-played\",\n    \"user-read-playback-state\",\n    \"user-read-currently-playing\",\n    \"user-modify-playback-state\",\n    \"user-library-modify\",\n    \"user-library-read\",\n    \"streaming\",\n    \"app-remote-control\",\n    \"user-read-private\",\n    \"user-read-email\",\n    \"user-follow-modify\",\n    \"user-follow-read\",\n    \"playlist-modify-public\",\n    \"playlist-read-collaborative\",\n    \"playlist-read-private\",\n    \"playlist-modify-private\"\n];","import React from \"react\"\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../auth/config\"\n// import Modal from \"react-bootstrap/Modal\"\nimport Button from \"react-bootstrap/Button\"\nimport styled from \"styled-components\"\n\nconst ModalHeader = styled.div`\ntext-align: center;\nfont-size: 2.5rem;\n`\nconst Body = styled.div`\nwidth: 100vw;\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n\nconst CenteredDiv = styled.div`\ncolor: white;\nwidth: 400px;\n\n`\n\nconst ModalBody = styled.div`\nword-wrap: break-word;\nmargin: 0 1em;\ntext-align: center;\n`\n\nconst Login = () => {\n  return (\n    <Body>\n      <CenteredDiv>\n        <ModalHeader className=\"font-fredoka\">BPM Playlist Maker</ModalHeader>\n        <ModalBody >\n          This app allows you to create playlists based on the BPM of songs to\n            create perfectly customized running playlists.<br/>\n          \n          <Button\n            href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n              \"%20\"\n            )}&response_type=token&show_dialog=false`}\n            className=\"my-3\" style={{backgroundColor: \"#1dd05d\"}}\n          >\n            Connect to Spotify\n          </Button>\n        </ModalBody>\n        </CenteredDiv>\n    </Body>\n  )\n}\n\nexport default Login\n\n\n\n","import React from 'react'\n\nconst Loading = () => <div className=\"text-white text-3xl text-center\"></div>\n\nexport default Loading","import React, {useEffect, useRef, useState} from \"react\"\nimport styled from \"styled-components\"\nimport { NavLink } from \"react-router-dom\"\n\nconst NLink = styled(NavLink)`\n  margin-right: 1em;\n  transition: color 0.1s ease-out;\n  &:active,\n  :hover {\n    color: #808a9f;\n    text-decoration: none;\n    cursor: pointer;\n    transition: color 0.1s ease-out;\n  }\n`\n\n// This was a lengthy ass process of styling the links properly\nconst MusicTypeSelector = () => {\n    const musicTypeHeader = useRef(null)\n    const [stick, setStick] = useState(false)\n    const breakpoint = useRef()\n\n\n\n    // the breakpoint ref is so that handleScroll has access to the breakpoint value, which is only determined after the first render\n    function handleScroll() {\n        // console.log(this.scrollY)\n        // console.log(breakpoint.current)\n        if(this.scrollY > breakpoint.current) {\n          setStick(true)\n        } else {\n          setStick(false)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll)\n        // On initial render, useEffect grabs the distance the playlistHeader is from the top, then sets the scroll breakpoint to that value, which is saved and remembered for future comparison of where to stop/start being sticky\n        // the only problem here is that if someone opens the window, scrolls down, resizes the window and scrolls up, it'll look a little funny, but that's a edge / corner case, and I'm not too worried about that now. I may be able to fix that if I take a different approach with my if/else statement in the handleScroll, but then my handleScroll would have to know the stick value\n        breakpoint.current = musicTypeHeader.current.offsetTop\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [])\n  return (\n      <>\n    {stick? <div style={{width: \"100vw\", height: `${musicTypeHeader.current.clientHeight}px`}}></div> : null}\n    <div className={stick ? \"stick text-silver flex text-xl tracking-wide p-2 font-nunito-semibold\" : \"w-full text-silver flex tracking-wide text-xl p-2 font-nunito-semibold\"} ref={musicTypeHeader}>\n      <NLink to=\"/playlists\" className=\"text-silver\" activeClassName=\"selected\">\n        Playlists\n      </NLink>\n      <NLink to=\"/albums\" className=\"text-silver\" activeClassName=\"selected\">\n        Albums\n      </NLink>\n      <NLink to=\"/search\" className=\"text-silver\" activeClassName=\"selected\">\n        Search\n      </NLink>\n    </div>\n    </>\n  )\n}\n\nexport default MusicTypeSelector\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport defaultIcon from '../icons/defaultIcon.svg'\n\n// COMPONENT INFO:\n// When using Card\n// path is the path to route to when card is clicked\n// endpoint is the endpoint that gets passed along is location.state to hydrate the page that card opens\n// imgClass is if you want to style your image, if you're using svg or something like that\n\nconst Card = ({ item, type, hero }) => {\n  // puts in track / playlist / artist / album and returns the proper data to put it into a card\n  let img\n  let header\n  let subheader\n  let endpoint\n  let path\n  switch (type) {\n    case 'album':\n    case 'albums':\n      img = item.images[0] ? item.images[0].url : defaultIcon\n      header = item.name\n      subheader = hero ? `Album • ${[...item.artists.map((artist) => artist.name)].join(', ')}` : [...item.artists.map((artist) => artist.name)].join(', ');\n      endpoint = item.href\n      path = '/album'\n      break\n    case 'artist':\n    case 'artists':\n      img = item.images[0] ? item.images[0].url : defaultIcon\n      header = item.name\n      subheader = hero ? \"Artist\" : null\n      endpoint = item.href\n      path = '/artist'\n      break\n    case 'playlist':\n    case 'playlists':\n      img = item.images[0] ? item.images[0].url : defaultIcon\n      header = item.name\n      subheader = hero ? \"Playlist\" : `by ${item.owner.display_name}`\n      endpoint = item.href\n      path = '/playlist'\n      break\n    case 'track':\n    case 'tracks':\n      img = item.album ? item.album.images[0] ? item.album.images[0].url : defaultIcon : defaultIcon\n      header = item.name\n      subheader = hero ? `Song • ${item.artists.map((artist) => artist.name).join(', ')}` : item.artists.map((artist) => artist.name).join(',')\n      endpoint = null\n      path = null\n      break\n    default:\n      img = defaultIcon\n      header = 'HEADER'\n      subheader = 'SUBHEADER'\n      endpoint = null\n      path = null\n  }\n\n  let history = useHistory()\n\n  // when you click on a playlist / album / etc, this routes you to a generic playlist / album / etc, page with state holding the endpoint for that page, so you can dynamically render it\n  function handleClick() {\n    if (!path) return\n    history.push(`${path}`, { endpoint: endpoint })\n  }\n\n  return (\n    <div id='card' className='text-white flex font-nunito-semibold ellipsis items-center m-2' onClick={handleClick}>\n      {/* allows whatever component that is rendering the card to just put default as a prop if there is no image there */}\n      <img\n        src={img}\n        alt={type}\n        className={'mr-2'}\n        style={{ objectFit: 'cover', height: '3.4em', width: '3.4em' }}\n        loading='lazy'\n      />\n      <div className='ellipsis'>\n        <div className='text-md ellipsis'>{header}</div>\n        <div className='text-sm text-silver'>{subheader}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport likedSongsIcon from '../../icons/heart-white.svg'\nimport { useHistory } from 'react-router-dom'\n\nconst LikedSongsCard = () => {\n  const history = useHistory()\n  const path = \"likedsongs\"\n  const endpoint = \"https://api.spotify.com/v1/me/tracks\"\n\n\n  function handleClick() {\n    history.push(`/${path}`, { endpoint: endpoint })\n  }\n\n  return (\n    <div\n      id='card'\n      className='text-white flex font-nunito-semibold ellipsis items-center ml-2'\n      style={{ margin: '0.6rem' }}\n      onClick={handleClick}>\n      {/* allows whatever component that is rendering the card to just put default as a prop if there is no image there */}\n      <div className='likedSongsImage mr-2 flex justify-center items-center' style={{objectFit: \"cover\", height: \"3.4em\", width: \"3.4em\"}}>\n        <img src={likedSongsIcon} alt='liked songs heart' style={{width: \"1.6em\", height: \"1.6em\"}}/>\n      </div>\n      <div className='ellipsis'>\n        <div className='text-md ellipsis'>Liked Songs</div>\n        <div className='text-sm text-silver'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default LikedSongsCard\n","\nconst fetchGet = async (fetchURL, token) => {\n        let response = await fetch(fetchURL, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }})\n          if(response.ok && response.status === \"200\") return await response.json()\n          // if authorization token is old, attempts to help the user login again. rendering a login didn't work so I'm trying this\n          else if(response.status === 401) {\n            console.log('401 Reload worked')\n            document.location.reload()\n\n          } else return await response\n}\n\nexport default fetchGet","\nimport React, {useState} from 'react'\n\nconst GlobalContext = React.createContext()\n\nconst GlobalContextProvider = (props) => {\n\n    const [context, setContext] = useState({})\n\n    return (\n        <GlobalContext.Provider value={{context, setContext}}>\n            {props.children}\n        </GlobalContext.Provider>\n    )\n}\n\n\nexport {GlobalContextProvider, GlobalContext}\n\n","import React, { useEffect, useState, useCallback, useContext } from 'react'\nimport Card from '../Card'\nimport Loading from '../Loading'\nimport LikedSongsCard from './LikedSongsCard'\nimport fetchGet from '../../helpers/fetchGet'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { GlobalContext } from '../../hooks/GlobalContext'\n\nconst Playlists = () => {\n  const {context: {token}} = useContext(GlobalContext)\n  const [playlists, setPlaylists] = useState([])\n  const [nextPlaylistUrl, setNextPlaylistUrl] = useState('https://api.spotify.com/v1/me/playlists?offset=0&limit=40')\n\n  // useEffect(() => {\n  //     console.log(playlists)\n  //     // playlists && console.log(playlists.items[0])\n  // }, [playlists])\n\n  // when the scroller reaches the bottom, this is the load more function\n  const handleLoadMore = async () => {\n    //  returns there are no more playlists to load\n    if (!nextPlaylistUrl) return\n\n    const response = await fetchGet(nextPlaylistUrl, token)\n    if (response.ok) {\n      const body = await response.json()\n      // puts playlists in state, which triggers a re-render\n      setPlaylists((prevPlaylists) => {\n        return [...prevPlaylists, ...body.items]\n      })\n\n      // and sets the next playlist url for the next time the load more function is called\n      setNextPlaylistUrl(body.next)\n    }\n  }\n\n  // annoying syntax used to load the initial data on the first render\n  const initHandleLoadMore = useCallback(handleLoadMore, [])\n  useEffect(() => {\n    initHandleLoadMore()\n  }, [initHandleLoadMore])\n\n  // if state has been updated\n  return playlists.length > 0 ? (\n    // if the undisplay prop is set to true, this div hides all the playlists, that way it doesn't have to call the api.\n    // there's got to be a better way to do this though...\n    <>\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={handleLoadMore}\n        // the api returns NULL if you've loaded all the playlists, which will set the hasMore boolean to false, and stop infinite scroll from trying to load any more\n        hasMore={Boolean(nextPlaylistUrl)}\n        loader={<Loading key='Loading' />}>\n        <LikedSongsCard />\n        {/* <LikedSongsCard /> */}\n\n        {playlists.map((playlist) => {\n          // console.log(playlist)\n          return (\n            <Card\n              key={playlist.id}\n              item={playlist}\n              type={playlist.type}\n            />\n          )\n        })}\n      </InfiniteScroll>\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default Playlists\n","import React, { useEffect, useState, useCallback, useContext } from 'react'\nimport Card from '../Card'\nimport Loading from '../Loading'\nimport fetchGet from '../../helpers/fetchGet'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { GlobalContext } from '../../hooks/GlobalContext'\n\nconst Albums = () => {\n  const {context: {token}} = useContext(GlobalContext)\n  const [albums, setAlbums] = useState([])\n  const [nextAlbumUrl, setNextAlbumUrl] = useState('https://api.spotify.com/v1/me/albums?offset=0&limit=40')\n\n  // when the scroller reaches the bottom, this is the load more function\n  const handleLoadMore = async () => {\n    //  returns there are no more playlists to load\n    if (!nextAlbumUrl) return\n\n    const response = await fetchGet(nextAlbumUrl, token)\n    if (response.ok) {\n      const body = await response.json()\n      // puts playlists in state, which triggers a re-render\n      setAlbums((prevAlbums) => {\n        const newAlbums = [...body.items].map((item) => item.album)\n        return [...prevAlbums, ...newAlbums]\n      })\n      // console.log(body)\n      // and sets the next playlist url for the next time the load more function is called\n      setNextAlbumUrl(body.next)\n    }\n  }\n\n  // annoying syntax used to load the initial data on the first render\n  const initHandleLoadMore = useCallback(handleLoadMore, [])\n  useEffect(() => {\n    initHandleLoadMore()\n  }, [initHandleLoadMore])\n\n  // if state has been updated\n  return albums.length > 0 ? (\n\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={handleLoadMore}\n      // the api returns NULL if you've loaded all the playlists, which will set the hasMore boolean to false, and stop infinite scroll from trying to load any more\n      hasMore={Boolean(nextAlbumUrl)}\n      loader={<Loading key='239rehoufwds' />}>\n\n\n      {albums.map((album) => {\n        return (\n          <Card\n            key={album.id}\n            item={album}\n            type=\"album\"\n          />\n        )\n      })}\n    </InfiniteScroll>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default Albums\n","import React from 'react'\nimport forwardArrow from '../../icons/forwardArrow.svg'\nimport backArrow from '../../icons/backArrowActive.svg'\nimport { useHistory } from 'react-router-dom'\n\nconst BrowseBar = ({ forward, back, path = '/browsepage', className, children, data = {} }) => {\n  const history = useHistory()\n  // browsebar is passed in a forward/back prop to let the component know how it wants to look, an optional path to route the user to, optional classes can be added, children should be there, and data which is an object that contains the state that you want to pass to the page you're routing to\n\n  function handleClick() {\n    if (back) history.goBack()\n    if (forward) history.push(`${path}`, data)\n  }\n  return (\n    <div className={`m-2 text-white ${className} ${forward ? 'text-left' : 'text-center sticky'} `} onClick={handleClick}>\n      <img\n        src={backArrow}\n        alt='back arrow'\n        className={`${back ? undefined : 'hidden'} inline fixed left-0`}\n        style={{ maxHeight: '1.5rem', maxWidth: '1.5rem'}}\n      />\n      {children}\n      <img\n        src={forwardArrow}\n        alt='forward arrow'\n        className={`${forward ? undefined : 'hidden'} inline fixed right-0`}\n        style={{ maxHeight: '1.5rem', maxWidth: '1.5rem' }}\n      />\n    </div>\n  )\n}\n\nexport default BrowseBar\n","import React, { useEffect, useContext } from 'react'\nimport fetchGet from '../../helpers/fetchGet'\nimport { GlobalContext } from '../../hooks/GlobalContext'\nimport Loading from '../Loading'\nimport BrowseBar from './BrowseBar'\nimport Card from '../Card'\n\n\nconst SearchResults = ({ query, data, setData }) => {\n  const {\n    context: { token },\n  } = useContext(GlobalContext)\n\n  useEffect(() => {\n    if (query.length < 1) return\n    const formattedQuery = query.split(' ').join('%20').split('').filter(character => character !== \"`\").join('')\n\n    console.log(formattedQuery)\n    const url = `https://api.spotify.com/v1/search?q=${formattedQuery}&type=album,artist,playlist,track&market=from_token`\n    console.log(url)\n    ;(async () => {\n      const response = await fetchGet(url, token)\n      const body = await response.json()\n      console.log(body)\n      setData({\n        albums: [...body.albums.items],\n        albumsUrl: body.albums.next,\n        artists: [...body.artists.items],\n        artistsUrl: body.artists.next,\n        playlists: [...body.playlists.items],\n        playlistsUrl: body.playlists.next,\n        tracks: [...body.tracks.items],\n        tracksUrl: body.tracks.next,\n      })\n    })()\n  }, [token, setData, query])\n\n\n  useEffect(() => console.log(data), [data])\n\n  return data ? (\n    <>\n    <Card item={data.tracks[0]} type='track' hero/>\n    <Card item={data.tracks[1]} type='track' hero/>\n    <Card item={data.artists[0]} type='artists' hero/>\n    <Card item={data.artists[1]} type='artists' hero/>\n    <Card item={data.playlists[0]} type='playlists' hero/>\n    <Card item={data.playlists[1]} type='playlists' hero/>\n    <Card item={data.albums[0]} type='album' hero/>\n      <BrowseBar forward data={{data: data.artists, next: data.artistsUrl, type: \"artists\"}}>\n        See all artists\n      </BrowseBar>\n      <BrowseBar forward data={{data: data.tracks, next: data.tracksUrl, type: \"tracks\"}}>\n        See all songs\n      </BrowseBar>\n      <BrowseBar forward data={{data: data.playlists, next: data.playlistsUrl, type: \"playlists\"}}>\n        See all playlists\n      </BrowseBar>\n      <BrowseBar forward data={{data: data.albums, next: data.albumsUrl, type: \"albums\"}}>\n        See all albums\n      </BrowseBar>\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default SearchResults\n","import React, { useState, useEffect } from \"react\"\nimport SearchResults from './SearchResults'\nimport styled from 'styled-components'\nimport {useHistory} from 'react-router-dom'\n\nconst SearchInput = styled.input`\npadding: 0.25em 0.9em 0.25em 2.5em;\nborder-radius: 1em;\nwidth: 100%;\n`\n\n\n\nconst Search = () => {\n  // react controlled forms\n  let history = useHistory()\n  // console.log(history.location.state)\n\n  // the following funkiness holds the results for the search page in state, that way if someone is browsing and goes back to the search page, the results can rehydrate from state\n  const [query, setQuery] = useState(history.location.state ? history.location.state.query : \"\")\n  const [data, setData] = useState(history.location.state ? history.location.state.data : null)\n  useEffect(() => {history.location.state = {query: query, data: data}}, [query, history.location.state, data])\n\n\n  function onChangeHandler(event) {\n    setQuery(event.target.value)\n  }\n\n\n\n  return (\n    <>\n    <div className=\"m-2 relative\">\n    <SearchInput\n      type=\"search\"\n      placeholder={\"Search for Artists, Songs, etc.\"}\n      autoFocus\n      value={query}\n      onChange={onChangeHandler}\n    />\n    {/* below is just some messy stuff I had to do to make sure the search icon was placed correctly. I couldn't figure out the background-image property so I just did what the spotify website did, BUT I know how to make this work without it being messy I'm just not going to right now because it works and I already spent a couple hours on this */}\n    <div className=\"searchSVG\"><span className=\"flex-1\">\n    <svg height=\"24\" role=\"img\" width=\"24\" viewBox=\"0 0 512 512\" className=\"block\" style={{color: \"rgb(19, 19, 19)\"}} aria-hidden=\"false\"><path d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\"></path></svg>\n    </span></div>\n    </div>\n\n    <SearchResults query={query} setData={setData} data={data}/>\n    </>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\nimport backArrow from '../../icons/backArrow.svg'\nimport backArrowActive from '../../icons/backArrowActive.svg'\n\nconst Button = styled.button`\n  /* top: 0.25rem; */\n  /* left: 0.25rem; */\n  background-color: rgba(0, 0, 0, 0.7);\n  /* border-radius: 50%; */\n  /* width: 2rem; */\n  /* height: 2rem; */\n  /* padding: 0.2rem; */\n  background-image: url(${backArrow});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-origin: content-box;\n  &:active {\n    background-image: url(${backArrowActive})\n  }\n\n`\n\n// rn this is just a back button. I think I'll keep it that way b/c who uses the forward buttons anyway???\n\nconst NavButtons = ({history, className}) => {\n  function handleClick() {\n    console.log('BLEEP BLOOOP TIIIME WARRRP')\n    history.goBack()\n  }\n\n  return <Button className={`w-8 h-8 rounded-full ${className}`}  onClick={handleClick}></Button>\n}\n\nexport default NavButtons\n","import React, { useEffect, useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport NavButton from './NavButton'\nimport Loading from '../Loading'\nimport Card from '../Card'\nimport fetchGet from '../../helpers/fetchGet'\nimport defaultImage from '../../icons/defaultIcon.svg'\nimport styled from 'styled-components'\nimport decodeHTML from '../../helpers/decodeHTML'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { GlobalContext } from '../../hooks/GlobalContext'\n\nconst PlaylistTop = styled.div`\n  /* props.backgroundColor allows for future background color responsiveness */\n  background: var(--bg-color);\n  background: linear-gradient(0deg, var(--bg-color) 0%, rgba(48, 48, 48, 1) 35%, ${(props) => props.backgroundColor} 100%);\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  /* align-items: center; */\n  font-size: 1.5rem;\n`\nconst PlaylistBottom = styled.div`\n  /* position: absolute;\n  top: 13em;\n  left: 0;\n  right: 0;\n  bottom: 0; */\n  z-index: 1000;\n  /* background: rgb(0,0,0); */\n  /* background: linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 78%, rgba(0,0,0,0) 100%); */\n`\n\nconst Header = styled.div`\n  width: 100%;\n`\n\nconst PlaylistPage = () => {\n  // history.location.state when calling history.push(to: '', state: {}) fill the state param with the endpoint to hydrate the page properly\n  const {\n    context: { token },\n  } = useContext(GlobalContext)\n  const history = useHistory()\n  const { endpoint } = history.location.state\n  const [data, setData] = useState(null)\n  const [nextTrackUrl, setNextTrackUrl] = useState(null)\n  const [tracks, setTracks] = useState(null)\n\n  useEffect(() => {\n    ;(async () => {\n      const response = await fetchGet(`${endpoint}?market=from_token`, token)\n      const body = await response.json()\n      setData(body)\n      setNextTrackUrl(body.tracks.next)\n      setTracks(body.tracks.items)\n      console.log(body)\n    })()\n  }, [endpoint, token])\n\n  const handleLoadMore = async () => {\n    if (!nextTrackUrl) return\n    const response = await fetchGet(nextTrackUrl, token)\n    if (response.ok) {\n      const body = await response.json()\n      setTracks((prevTracks) => {\n        return [...prevTracks, ...body.items]\n      })\n\n      setNextTrackUrl(body.next)\n    }\n  }\n\n  return data && tracks ? (\n    <div className='text-white'>\n      <PlaylistTop backgroundColor={data.primary_color ? `${data.primary_color}` : '#535353'}>\n        <Header>\n          <div className='m-2 text-center'>{data.name}</div>\n          <NavButton history={history} className=\"top-0 left-0 m-2 fixed\"/>\n        </Header>\n        <img\n          src={data.images[0] ? data.images[0].url : defaultImage}\n          alt='playlist'\n          style={{ height: '7em', width: '7em' }}\n          className='self-center'\n        />\n        <div id='ownerAndDescription' className='self-start p-3'>\n          <div className='text-base'>by {data.owner.display_name}</div>\n          <div className='text-silver text-sm'>{data.description ? decodeHTML(data.description) : ''}</div>\n        </div>\n      </PlaylistTop>\n      <PlaylistBottom>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={handleLoadMore}\n          hasMore={Boolean(nextTrackUrl)}\n          loader={<Loading key='Loading' />}>\n          {tracks.map((index) => {\n            const track = index.track\n            return <Card key={track.id} item={track} type=\"track\"/>\n          })}\n        </InfiniteScroll>\n      </PlaylistBottom>\n    </div>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default PlaylistPage\n","export default function decodeHTML(html) {\n  var txt = document.createElement(\"textarea\");\n  txt.innerHTML = html;\n  return txt.value;\n}","import React, { useEffect, useState, useContext } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport NavButton from './NavButton'\nimport fetchGet from '../../helpers/fetchGet'\nimport {GlobalContext} from \"../../hooks/GlobalContext\"\n\nconst ArtistPage = () => {\nconst {context: {token}} = useContext(GlobalContext)\n  // history.location.state when calling history.push(to: '', state: {}) fill the state param with the endpoint to hydrate the page properly\nconst history = useHistory()\nconst {endpoint} = history.location.state\nconst [data, setData] = useState(null)\n\n\nuseEffect(() => {\n(async () => {\n  const response = await fetchGet(`${endpoint}`, token)\n  const body = await response.json()\n  setData(body)\n  console.log(data)\n})()\n}, [data, endpoint, token])\n\n\n return (\n  <div className=\"page absolute bottom-0 left-0 right-0 top-0 text-white\" >\n    \n\n\n\n\n   <NavButton history={history}/>\n  </div>\n )\n}\n\n\nexport default ArtistPage","import React, { useEffect, useState, useContext } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport NavButton from './NavButton'\nimport fetchGet from '../../helpers/fetchGet'\nimport {GlobalContext} from \"../../hooks/GlobalContext\"\n\nconst AlbumPage = () => {\nconst {context: {token}} = useContext(GlobalContext)\n  // history.location.state when calling history.push(to: '', state: {}) fill the state param with the endpoint to hydrate the page properly\nconst history = useHistory()\nconst {endpoint} = history.location.state\nconst [data, setData] = useState(null)\n\nconsole.log(data)\nuseEffect(() => {\n(async () => {\n  const response = await fetchGet(`${endpoint}`, token)\n  const body = await response.json()\n  setData(body)\n  console.log(body)\n})()\n}, [endpoint, token])\n\n\n return (\n  <div className=\"page absolute bottom-0 left-0 right-0 top-0 text-white\" >\n    \n\n\n\n\n   <NavButton history={history}/>\n  </div>\n )\n}\n\n\nexport default AlbumPage","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport BrowseBar from './BrowseBar'\nimport Loading from '../Loading'\nimport fetchGet from '../../helpers/fetchGet'\nimport { GlobalContext } from '../../hooks/GlobalContext'\nimport Card from '../Card'\n\nconst BrowsePage = () => {\n  const {\n    context: { token },\n  } = useContext(GlobalContext)\n  const history = useHistory()\n  const type = history.location.state.type\n  const newType = type.split(\"\")\nnewType[0] = newType[0].toUpperCase()\n  const capsType = newType.join(\"\")\n  const [data, setData] = useState([...history.location.state.data])\n  const [next, setNext] = useState(history.location.state.next)\n\n  useEffect(() => {\n    console.log(data)\n    console.log(type)\n    console.log(next)\n  }, [next, data, type])\n\n  const handleLoadMore = async () => {\n    //  returns if there are no more thingsto load\n    if (!next) return\n    const response = await fetchGet(next, token)\n    if (response.ok) {\n      const body = await response.json()\n      // items must change depending on the type\n      let items = body[`${type}`].items\n      console.log(items)\n      setNext(body[`${type}`].next)\n      setData((prevData) => {\n        return [...prevData, ...items]\n      })\n\n      // and sets the next url for the next time the load more function is called\n    }\n  }\n\n  \n\n  return (\n    <>\n      <BrowseBar back>{`${capsType}`}</BrowseBar>\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={handleLoadMore}\n        // the api returns NULL if you've loaded all the playlists, which will set the hasMore boolean to false, and stop infinite scroll from trying to load any more\n        hasMore={Boolean(next)}\n        loader={<Loading key='Loading' />}\n        threshold={500}>\n        {data.map((item) => {\n          // console.log(item)\n          return <Card key={item.id} item={item} type={type} />\n        })}\n      </InfiniteScroll>\n    </>\n  )\n}\n\nexport default BrowsePage\n","import React from 'react'\nimport NavButton from '../nav-components/NavButton'\nimport {useHistory} from 'react-router-dom'\n\nconst LikedSongs = () => {\n  const history = useHistory()\n\n  return (\n    <div className=\"page absolute bottom-0 left-0 right-0 top-0 text-white\" >\n    \n\n\n\n\n   <NavButton history={history}/>\n  </div>\n  )\n}\n\n\nexport default LikedSongs","import React, { useState, useEffect, useContext } from 'react'\nimport hash from './auth/hash'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Loading from './components/Loading'\nimport MusicTypeSelector from './components/MusicTypeSelector'\nimport Playlists from './components/user-library/Playlists'\nimport Albums from './components/user-library/Albums'\nimport Search from './components/search-components/Search'\nimport PlaylistPage from './components/nav-components/PlaylistPage'\nimport ArtistPage from './components/nav-components/ArtistPage'\nimport AlbumPage from './components/nav-components/AlbumPage'\nimport BrowsePage from './components/search-components/BrowsePage'\nimport './App.css'\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom'\nimport LikedSongsPage from './components/user-library/LikedSongsPage'\nimport { GlobalContext } from './hooks/GlobalContext'\n\nconst Home = () => {\n  const { setContext } = useContext(GlobalContext)\n\n  hash.error && console.log(hash.error)\n  const [token, setToken] = useState(null)\n  const [userData, setUserData] = useState(null)\n  const [authFailed, setAuthFailed] = useState(false)\n\n  // checks the url for the token, and sets the token if it's there, otherwise checks local storage and sets that, also sets the token in redux global store with props.addToken\n  // I'm using localStorage right now, mainly for my own development purposes, it keeps me from having to hit login every time I edit code and want to look at the app.\n  useEffect(() => {\n    if (hash.access_token) {\n      setToken(hash.access_token)\n      localStorage.clear()\n      localStorage.setItem('token', hash.access_token)\n      setContext((prevContext) => ({ ...prevContext, token: hash.access_token }))\n      console.log(hash.access_token)\n    } else {\n      setToken(localStorage.getItem('token'))\n      let a = localStorage.getItem('token')\n      setContext((prevContext) => ({ ...prevContext, token: a }))\n    }\n  }, [setContext]) /* setContext will never change, it's just a required dependency*/\n\n  // calls the api, helps make sure everything is working\n  useEffect(() => {\n    const spotifyConnect = async (_token) => {\n      // if the key doesn't exist, then it stops the function and allows for the Login component to be rendered\n      if (!_token) {\n        setAuthFailed(true)\n        return\n      }\n      let response = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        headers: {\n          Authorization: `Bearer ${_token}`,\n        },\n      })\n      // sets state to the response of the api\n      if (response.ok) setUserData(await response.json())\n      // if the response didn't work, and it had a status of 401 unauthorized, sets failed to true, which renders the login component\n      if (!response.ok && response.status === '401') setAuthFailed(true)\n    }\n    spotifyConnect(token)\n  }, [token])\n\n  // useEffect(() => {\n  //   console.log(userData)\n  // }, [userData])\n\n  if (userData) {\n    return (\n      <>\n        <Router\n          initialEntries={[\n            '/playlists',\n            '/albums',\n            '/search',\n            { pathname: '/playlist', state: { endpoint: 'https://api.spotify.com/v1/playlists/37i9dQZF1DX4osfY3zybD2' } },\n          ]}\n          initialIndex={2}>\n          <Switch>\n            <Route path='/playlists'>\n              <Header userData={userData} />\n              <MusicTypeSelector />\n              <Playlists />\n            </Route>\n            <Route path='/albums'>\n              <Header userData={userData} />\n              <MusicTypeSelector />\n              <Albums />\n            </Route>\n            <Route path='/search'>\n              <Header userData={userData} />\n              <MusicTypeSelector />\n              <Search />\n            </Route>\n            <Route path='/likedsongs'>\n              <LikedSongsPage />\n            </Route>\n            <Route path='/playlist'>\n              <PlaylistPage />\n            </Route>\n            <Route path='/artist'>\n              <ArtistPage />\n            </Route>\n            <Route path='/album'>\n              <AlbumPage />\n            </Route>\n            <Route path='/browsepage'>\n              <BrowsePage />\n            </Route>\n          </Switch>\n        </Router>\n      </>\n    )\n  } else if (authFailed) {\n    return <Login />\n  } else {\n    return <Loading />\n  }\n}\n\nexport default Home\n","import React from 'react';\nimport Home from './Home'\nimport {GlobalContextProvider} from './hooks/GlobalContext'\n\nfunction App() {\n\n  window.addEventListener(\"load\",function() {\n    // Set a timeout...\n    setTimeout(function(){\n      // Hide the address bar!\n      window.scrollTo(0, 1);\n    }, 0);\n  });\n\n  return (\n    <GlobalContextProvider>\n      <Home />\n    </GlobalContextProvider>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}